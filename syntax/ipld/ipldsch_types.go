package ipld

// Code generated by go-ipld-prime gengo.  DO NOT EDIT.

import (
	"github.com/ipld/go-ipld-prime/datamodel"
)

var _ datamodel.Node = nil // suppress errors when this dependency is not referenced
// Type is a struct embeding a NodePrototype/Type for every Node implementation in this package.
// One of its major uses is to start the construction of a value.
// You can use it like this:
//
// 		ipld.Type.YourTypeName.NewBuilder().BeginMap() //...
//
// and:
//
// 		ipld.Type.OtherTypeName.NewBuilder().AssignString("x") // ...
//
var Type typeSlab

type typeSlab struct {
	Bool_IPLD            _Bool_IPLD__Prototype
	Bool_IPLD__Repr      _Bool_IPLD__ReprPrototype
	Bytes_IPLD           _Bytes_IPLD__Prototype
	Bytes_IPLD__Repr     _Bytes_IPLD__ReprPrototype
	Dict_IPLD            _Dict_IPLD__Prototype
	Dict_IPLD__Repr      _Dict_IPLD__ReprPrototype
	Float_IPLD           _Float_IPLD__Prototype
	Float_IPLD__Repr     _Float_IPLD__ReprPrototype
	Int_IPLD             _Int_IPLD__Prototype
	Int_IPLD__Repr       _Int_IPLD__ReprPrototype
	List_IPLD            _List_IPLD__Prototype
	List_IPLD__Repr      _List_IPLD__ReprPrototype
	Node_IPLD            _Node_IPLD__Prototype
	Node_IPLD__Repr      _Node_IPLD__ReprPrototype
	Nodes_IPLD           _Nodes_IPLD__Prototype
	Nodes_IPLD__Repr     _Nodes_IPLD__ReprPrototype
	Pair_IPLD            _Pair_IPLD__Prototype
	Pair_IPLD__Repr      _Pair_IPLD__ReprPrototype
	Pairs_IPLD           _Pairs_IPLD__Prototype
	Pairs_IPLD__Repr     _Pairs_IPLD__ReprPrototype
	Predicate_IPLD       _Predicate_IPLD__Prototype
	Predicate_IPLD__Repr _Predicate_IPLD__ReprPrototype
	String               _String__Prototype
	String__Repr         _String__ReprPrototype
	String_IPLD          _String_IPLD__Prototype
	String_IPLD__Repr    _String_IPLD__ReprPrototype
}

// --- type definitions follow ---

// Bool_IPLD matches the IPLD Schema type "Bool_IPLD".  It has bool kind.
type Bool_IPLD = *_Bool_IPLD
type _Bool_IPLD struct{ x bool }

// Bytes_IPLD matches the IPLD Schema type "Bytes_IPLD".  It has bytes kind.
type Bytes_IPLD = *_Bytes_IPLD
type _Bytes_IPLD struct{ x []byte }

// Dict_IPLD matches the IPLD Schema type "Dict_IPLD".  It has struct type-kind, and may be interrogated like map kind.
type Dict_IPLD = *_Dict_IPLD
type _Dict_IPLD struct {
	Pairs _Pairs_IPLD
}

// Float_IPLD matches the IPLD Schema type "Float_IPLD".  It has float kind.
type Float_IPLD = *_Float_IPLD
type _Float_IPLD struct{ x float64 }

// Int_IPLD matches the IPLD Schema type "Int_IPLD".  It has int kind.
type Int_IPLD = *_Int_IPLD
type _Int_IPLD struct{ x int64 }

// List_IPLD matches the IPLD Schema type "List_IPLD".  It has struct type-kind, and may be interrogated like map kind.
type List_IPLD = *_List_IPLD
type _List_IPLD struct {
	Elements _Nodes_IPLD
}

// Node_IPLD matches the IPLD Schema type "Node_IPLD".
// Node_IPLD has union typekind, which means its data model behaviors are that of a map kind.
type Node_IPLD = *_Node_IPLD
type _Node_IPLD struct {
	x _Node_IPLD__iface
}
type _Node_IPLD__iface interface {
	_Node_IPLD__member()
}

func (_String_IPLD) _Node_IPLD__member()    {}
func (_Bytes_IPLD) _Node_IPLD__member()     {}
func (_Int_IPLD) _Node_IPLD__member()       {}
func (_Float_IPLD) _Node_IPLD__member()     {}
func (_Bool_IPLD) _Node_IPLD__member()      {}
func (_Dict_IPLD) _Node_IPLD__member()      {}
func (_List_IPLD) _Node_IPLD__member()      {}
func (_Predicate_IPLD) _Node_IPLD__member() {}

// Nodes_IPLD matches the IPLD Schema type "Nodes_IPLD".  It has list kind.
type Nodes_IPLD = *_Nodes_IPLD
type _Nodes_IPLD struct {
	x []_Node_IPLD
}

// Pair_IPLD matches the IPLD Schema type "Pair_IPLD".  It has struct type-kind, and may be interrogated like map kind.
type Pair_IPLD = *_Pair_IPLD
type _Pair_IPLD struct {
	Key   _Node_IPLD
	Value _Node_IPLD
}

// Pairs_IPLD matches the IPLD Schema type "Pairs_IPLD".  It has list kind.
type Pairs_IPLD = *_Pairs_IPLD
type _Pairs_IPLD struct {
	x []_Pair_IPLD
}

// Predicate_IPLD matches the IPLD Schema type "Predicate_IPLD".  It has struct type-kind, and may be interrogated like map kind.
type Predicate_IPLD = *_Predicate_IPLD
type _Predicate_IPLD struct {
	Tag        _String
	Positional _Nodes_IPLD
	Named      _Pairs_IPLD
}

// String matches the IPLD Schema type "String".  It has string kind.
type String = *_String
type _String struct{ x string }

// String_IPLD matches the IPLD Schema type "String_IPLD".  It has string kind.
type String_IPLD = *_String_IPLD
type _String_IPLD struct{ x string }
